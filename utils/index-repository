#!/bin/sh

if [ "$#" -lt 2 ]; then
    echo "Usage: $0 repo_name repo_urls..."
    exit 1
fi

# $1 is the project path (inside will be created data/ and repo/).
# It supports being called on an existing project.
project_init() {
    mkdir -p $1/data $1/repo

    # This doesn't fail if repo already exists
    git -C $1/repo init --bare

    git config --system --add safe.directory $1/repo
}

# $1 is the project path (parent of data/ and repo/).
# $2 is the remote URL.
project_add_remote() {
    git="git -C $1/repo"

    # Do nothing if remote already exists.
    if $git remote | xargs -L1 -r $git remote get-url | grep -qxF "$2"; then
        return;
    fi

    # Remotes are called remote$i with $i = 0, 1, 2...
    i="$($git remote | awk '
        BEGIN { n=-1; }
        $0 ~ /^remote[0-9]+$/ { i=substr($0, length("remote")+1);
                                if (i>n) n=i; }
        END { print n+1; }')"

    $git remote add remote$i "$2"
}

dir=/srv/elixir-data/$1

project_init "$dir"

git="git -C $dir/repo"

shift
for remote
do
    project_add_remote "$dir" "$remote"
done

$git fetch --all --tags -j4

if test -z "$ELIXIR_THREADS"; then
    ELIXIR_THREADS="$(nproc)"
fi

export LXR_REPO_DIR=$dir/repo
export LXR_DATA_DIR=$dir/data
python3 /usr/local/elixir/update.py $ELIXIR_THREADS
